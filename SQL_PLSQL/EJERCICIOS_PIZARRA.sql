CREATE OR REPLACE PROCEDURE CUENTA_CLIENTES_COMERCIAL
IS
    CLIENTES NUMBER;
    COMERCIALES NUMBER;
BEGIN
    SELECT COUNT(ID) INTO CLIENTES
    FROM CLIENTE;
    SELECT COUNT(ID) INTO COMERCIALES
    FROM COMERCIAL;
    
    IF(CLIENTES>COMERCIALES)
        THEN DBMS_OUTPUT.PUT_LINE('TENGO '||(CLIENTES-COMERCIALES)||' CLIENTES MAS QUE COMERCIALES');
    ELSIF(COMERCIALES>CLIENTES)
        THEN DBMS_OUTPUT.PUT_LINE('TENGO '||(COMERCIALES-CLIENTES)||' COMERCIALES MAS QUE CLIENTES');
    ELSE
        DBMS_OUTPUT.PUT_LINE('EL NUMERO DE CLIENTES ES LO MISMO QUE DE COMERCIALES');
    END IF;
END CUENTA_CLIENTES_COMERCIAL;
/

CREATE OR REPLACE PROCEDURE VER_CLIENTE 
IS
    ID_C NUMBER;
    NOMBRE CLIENTE.NOMBRE%TYPE;
    AP1 CLIENTE.APELLIDO1%TYPE;
    AP2 CLIENTE.APELLIDO2%TYPE;
    C CLIENTE.CIUDAD%TYPE;
BEGIN
     ID_C:='&INTRODUCE_EL_ID_DEL_CLIENTE';
     SELECT NOMBRE, APELLIDO1, APELLIDO2, CIUDAD INTO NOMBRE, AP1, AP2, C
     FROM CLIENTE
     WHERE ID = ID_C;
     DBMS_OUTPUT.PUT_LINE('NOMBRE: '||NOMBRE|| ' APELLIDO1: '||AP1|| ' APELLIDO2: '||AP2|| ' CIUDAD: '||C);
END VER_CLIENTE;
/

DECLARE 
    CURSOR NOMBRES IS
    SELECT NOMEM FROM EMPLEADOS;
BEGIN
    FOR REGISTRO IN NOMBRES
    LOOP
    DBMS_OUTPUT.PUT_LINE('NOMBRES: '||REGISTRO.NOMEM);
    END LOOP;
END;    
/